<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StarkBIM.SampleRevitApp.RvtAddin</name>
    </assembly>
    <members>
        <member name="T:StarkBIM.SampleRevitApp.RvtAddin.App">
            <summary>
                The main application class loaded by Revit
            </summary>
            <remarks>
                Add commands to the menu in the OnStartup class, otherwise they will not be available to add as shortcuts and will
                not permanently stay in the Quick Launch toolbar
                Other functions can be performed in the ApplicationInitialized event handler
            </remarks>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.App.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StarkBIM.SampleRevitApp.RvtAddin.App"/> class.
            Initialize as much logic in the constructor as possible
            </summary>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.App.OnShutdown(Autodesk.Revit.UI.UIControlledApplication)">
            <inheritdoc />
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.App.OnStartup(Autodesk.Revit.UI.UIControlledApplication)">
            <summary>
                The OnStartup method called by Revit when the addin is loaded.
                The only logic performed here is event registration and menu construction
                All non-Revit-dependent functionality has been initialized in the constructor
            </summary>
            <param name="application">The UI controlled application object</param>
            <returns>The result, always Succeeded unless an exception is thrown</returns>
        </member>
        <member name="T:StarkBIM.SampleRevitApp.RvtAddin.Configuration.CommandModule">
            <summary>
            Autofac module containing registration information required for commands
            </summary>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Configuration.CommandModule.Load(Autofac.ContainerBuilder)">
            <inheritdoc />
        </member>
        <member name="T:StarkBIM.SampleRevitApp.RvtAddin.Core.GenericCommand`1">
            <summary>
                The generic command means that we don't need to tag each class with the Transaction attribute.
                It also means that commands don't need to be kept in the RvtAddin assembly.
            </summary>
            <typeparam name="TCommand">The type of the command runner</typeparam>
            <remarks>
                Tried to see if it was possible to call a class that doesn't exist, but it didn't work
                // Tried to trigger the TypeResolve event using this, but it didn't work
                ////var button3Data = new PushButtonData("Button3", "Button3", asmName, "BadName");
                // This also doesn't trigger the TypeResolve event. There are no other AppDomains (at least accessible from here)
                ////var button3Data = new PushButtonData("Button3", "Button3", asmName,
                "StarkBIM.RevitAddin1.GenericCommand`1[[BadName]]");
                ////ribbonPanel.AddItem(button3Data);
            </remarks>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Core.GenericCommand`1.Execute(Autodesk.Revit.UI.ExternalCommandData,System.String@,Autodesk.Revit.DB.ElementSet)">
            <inheritdoc />
        </member>
        <member name="T:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions">
            <summary>
            Extension methods to add data to ribbon items for Revit's menu
            </summary>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.SetAllButtonProperties``2(``0,``1)">
            <summary>
            Adds all properties to a ButtonData instance from an IRvtCommand instance
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="buttonData">The button data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with properties added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.SetAllPushButtonDataProperties``2(``0,``1)">
            <summary>
            Adds all properties to a PushButtonData instance from an IRvtCommand instance
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="buttonData">The button data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with properties added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.SetAllRibbonItemProperties``2(``0,``1)">
            <summary>
            Adds all properties to a RibbonItemData instance from an IRvtCommand instance
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="ribbonItemData">The ribbon item data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with properties added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithAvailabilityClass``2(``0,``1)">
            <summary>
            Adds the availability class information to a button from a command
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="buttonData">The button data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with the availability class name added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithAvailabilityClass``1(``0,System.String)">
            <summary>
            Adds the availability class name to a command
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <param name="buttonData">The button data instance</param>
            <param name="availabilityClassName">The availability class name</param>
            <returns>The button data with the availability class name added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithContextualHelp``2(``0,``1)">
            <summary>
            Adds the contextual help from the given command to the ribbon item data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="ribbonItemData">The ribbon item data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with the contextual help added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithContextualHelp``1(``0,Autodesk.Revit.UI.ContextualHelp)">
            <summary>
            Adds the given contextual help to the ribbon item data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <param name="ribbonItemData">The ribbon item data instance</param>
            <param name="contextualHelp">The contextual help</param>
            <returns>The button data with the contextual help added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithImage``2(``0,``1)">
            <summary>
            Adds the image from the given command to the button data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="buttonData">The button data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with the image added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithImage``1(``0,System.Windows.Media.ImageSource)">
            <summary>
            Adds the given image to the button data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <param name="buttonData">The button data instance</param>
            <param name="imageSource">The image</param>
            <returns>The button data with the image added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithLargeImage``2(``0,``1)">
            <summary>
            Adds the large image from the given command to the button data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="buttonData">The button data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with the large image added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithLargeImage``1(``0,System.Windows.Media.ImageSource)">
            <summary>
            Adds the given large image to the button data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <param name="buttonData">The button data instance</param>
            <param name="imageSource">The large image</param>
            <returns>The button data with the large image added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithLongDescription``2(``0,``1)">
            <summary>
            Adds the long description from the given command to the ribbon item data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="ribbonItemData">The ribbon item data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with the long description added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithLongDescription``1(``0,System.String)">
            <summary>
            Adds the given long description to the ribbon item data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <param name="ribbonItemData">The ribbon item data instance</param>
            <param name="longDescription">The long description</param>
            <returns>The button data with the long description added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithToolTip``2(``0,``1)">
            <summary>
            Adds the tooltip from the given command to the ribbon item data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="ribbonItemData">The ribbon item data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with the tooltip added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithToolTip``1(``0,System.String)">
            <summary>
            Adds the given tooltip to the ribbon item data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <param name="ribbonItemData">The ribbon item data instance</param>
            <param name="toolTip">The tooltip</param>
            <returns>The button data with the tooltip added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithToolTipImage``2(``0,``1)">
            <summary>
            Adds the tooltip image from the given command to the ribbon item data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="ribbonItemData">The ribbon item data instance</param>
            <param name="command">The command instance</param>
            <returns>The button data with the tool tip image added</returns>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RibbonItemDataExtensions.WithToolTipImage``1(``0,System.Windows.Media.ImageSource)">
            <summary>
            Adds the given tooltip image to the ribbon item data
            </summary>
            <typeparam name="T">The type of the button data</typeparam>
            <param name="ribbonItemData">The ribbon item data instance</param>
            <param name="imageSource">The image</param>
            <returns>The button data with the tool tip image added</returns>
        </member>
        <member name="T:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RvtCommandExtensions">
            <summary>
            Extension methods for RvtCommands
            </summary>
        </member>
        <member name="M:StarkBIM.SampleRevitApp.RvtAddin.Extensions.RvtCommandExtensions.CreatePushButtonData``1(StarkBIM.SampleRevitApp.Commands.Core.IRvtCommand)">
            <summary>
            Creates a pushbutton for an RvtCommand
            </summary>
            <typeparam name="TCommand">The type of the command</typeparam>
            <param name="command">The command</param>
            <returns>A PushbuttonData object for the command</returns>
        </member>
    </members>
</doc>
